/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.paypal;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.util.TiConvert;

import android.net.Uri;
import android.app.Activity;

import com.paypal.android.sdk.payments.PayPalConfiguration;
import ti.paypal.PaypalModule;

// This proxy can be created by calling Paypal.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = PaypalModule.class)
public class ConfigurationProxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = "PPConfiguration";

	public static String merchantName, merchantPrivacyPolicyURL,
			merchantUserAgreementURL, locale;

	

	private static PayPalConfiguration config = new PayPalConfiguration()
			.environment(PaypalModule.CONFIG_ENVIRONMENT)
			.clientId(PaypalModule.CLIENT_ID)
			// The following are only used in PayPalFuturePaymentActivity.
			.merchantName(merchantName)
			.merchantPrivacyPolicyUri(Uri.parse(merchantPrivacyPolicyURL))
			.merchantUserAgreementUri(Uri.parse(merchantUserAgreementURL));

	// Constructor
		public ConfigurationProxy() {
			super();
		}
	
	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict args) {
		if (args.containsKeyAndNotNull("merchantName")) {
			merchantName = TiConvert.toString(args.get("merchantName"));
		} else
			Log.d(LCAT, "merchantName is missing");

		if (args.containsKeyAndNotNull("merchantPrivacyPolicyURL")) {
			merchantPrivacyPolicyURL = TiConvert.toString(args
					.get("merchantPrivacyPolicyURL"));
		} else
			Log.d(LCAT, "merchantPrivacyPolicyURL is missing");

		if (args.containsKeyAndNotNull("merchantUserAgreementURL")) {
			merchantUserAgreementURL = TiConvert.toString(args
					.get("merchantUserAgreementURL"));
		} else
			Log.d(LCAT, "merchantUserAgreementURL is missing");

		if (args.containsKeyAndNotNull("locale")) {
			merchantUserAgreementURL = TiConvert.toString(args.get("locale"));
		} else
			Log.d(LCAT, "locale is missing");
		super.handleCreationDict(args);
	}

}
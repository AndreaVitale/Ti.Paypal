/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.paypal;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.util.TiConvert;
import com.paypal.android.sdk.payments.PayPalItem;
import java.math.BigDecimal;
import ti.paypal.PaypalModule;

// This proxy can be created by calling Paypal.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = PaypalModule.class)
public class PaymentItemProxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = "Paypal_PaymentItem";
	String name;
	BigDecimal price;
	String sku;
	int quantity;
	String currency;
	// https://github.com/paypal/PayPal-Android-SDK
	final PayPalItem payPalItem;

	// Constructor
	public PaymentItemProxy() {
		super();
		payPalItem = new PayPalItem(name, quantity, price, currency, sku);
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict args) {
		if (args.containsKeyAndNotNull("name")) {
			name = TiConvert.toString(args.get("name"));
		} else
			Log.d(LCAT, "name is missing");
		if (args.containsKeyAndNotNull("price")) {
			price = new BigDecimal(TiConvert.toString(args.get("price")));
		} else
			Log.d(LCAT, "price is missing");
		if (args.containsKeyAndNotNull("sku")) {
			sku = TiConvert.toString(args.get("sku"));
		} else
			Log.d(LCAT, "sku is missing");
		if (args.containsKeyAndNotNull("quantity")) {
			quantity = TiConvert.toInt(args.get("quantity"));
		} else
			Log.d(LCAT, "quantity is missing");
		if (args.containsKeyAndNotNull("currency")) {
			currency = TiConvert.toString(args.get("currency"));
		} else
			Log.d(LCAT, "currency is missing");
		super.handleCreationDict(args);
	}
}